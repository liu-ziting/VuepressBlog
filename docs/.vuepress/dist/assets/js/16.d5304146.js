(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{250:function(s,a,n){"use strict";n.r(a);var t=n(0),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"ajax长轮询、轮询应用和介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ajax长轮询、轮询应用和介绍"}},[s._v("#")]),s._v(" ajax长轮询、轮询应用和介绍")]),s._v(" "),n("h4",{attrs:{id:"什么是轮询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是轮询"}},[s._v("#")]),s._v(" 什么是轮询")]),s._v(" "),n("p",[s._v("轮询是指客户端定时向服务器发送ajax请求，服务器接到请求后马上返回响应信息并关闭连接。")]),s._v(" "),n("h4",{attrs:{id:"轮询的简单实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#轮询的简单实现"}},[s._v("#")]),s._v(" 轮询的简单实现")]),s._v(" "),n("p",[s._v("仅仅是说出定义来，好像很模糊，代码更加直观一些，下面就简单写一下轮询的实现方式：\n前端代码（以jquery ajax为例，当然你也可以通过纯js的方式）")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<html>\n<head>\n    <title>haorooms博客轮询测试案例</title>\n    <script src=\"http://www.haorooms.com/theme/assets/js/jquery.js\"><\/script>\n</head>\n<body>\n<script type=\"text/javascript\">\n        var getting = {\n        url:'server.php',\n        dataType:'json',\n        success:function(res) {\n         console.log(res);\n}\n};\n//Ajax定时访问服务端，不断获取数据 ，这里是1秒请求一次。\nwindow.setInterval(function(){$.ajax(getting)},1000);\n<\/script>\n</body>\n</html>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("大家可以看到，前一次请求完成后，无论有无结果返回，一秒之后下一次请求又会发出。这就叫做Ajax轮询。通过这个案例，大家也可以看出，这样存在性能问题，服务器也增加很多压力。但是这就是轮询的一种实现方式了。")]),s._v(" "),n("h4",{attrs:{id:"什么是长轮询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是长轮询"}},[s._v("#")]),s._v(" 什么是长轮询")]),s._v(" "),n("p",[s._v("客户端向服务器发送Ajax请求，服务器接到请求后hold住连接，直到有新消息才返回响应信息并关闭连接，客户端处理完响应信息后再向服务器发送新的请求。\n通过上面描述，我们可以看出，长轮询本身不是一种真正的推送技术，而只是传统轮询技术的一个变种。然而，其能够在真正推送技术无法实现时模拟推送机制。")]),s._v(" "),n("h4",{attrs:{id:"长轮询的简单实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#长轮询的简单实现"}},[s._v("#")]),s._v(" 长轮询的简单实现")]),s._v(" "),n("p",[s._v("直接上代码展示吧！前端代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<html>\n<head>\n    <title>haorooms博客长轮询测试案例</title>\n    <script src=\"http://www.haorooms.com/theme/assets/js/jquery.js\"><\/script>\n</head>\n<body>\n<script type=\"text/javascript\">\n    //前端Ajax持续调用服务端，称为Ajax轮询技术\n    var getting = {\n        url:'server.php',\n        dataType:'json',\n        success:function(res) {\n         console.log(res);\n         $.ajax(getting); //关键在这里，回调函数内再次请求Ajax\n}        \n        //当请求时间过长（默认为60秒），就再次调用ajax长轮询\n        error:function(res){\n        $.ajax($getting);\n        }\n};\n$.ajax(getting);\n<\/script>\n</body>\n</html>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);